"""Criação do DB em MySql

Revision ID: d9c3ca291eb1
Revises: 
Create Date: 2025-10-16 20:25:21.983349

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd9c3ca291eb1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('sobrenome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('login', sa.String(length=80), nullable=False),
    sa.Column('senha_hash', sa.String(length=256), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.Column('precisa_alterar_senha', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('login')
    )
    op.create_table('conta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('nome_banco', sa.String(length=100), nullable=False),
    sa.Column('agencia', sa.String(length=20), nullable=False),
    sa.Column('conta', sa.String(length=50), nullable=False),
    sa.Column('tipo', sa.Enum('Corrente', 'Poupança', 'Digital', 'Investimento', 'Caixinha', 'Dinheiro', 'Benefício', 'FGTS', name='tipo_conta_enum'), nullable=False),
    sa.Column('saldo_inicial', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('saldo_atual', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('limite', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'nome_banco', 'agencia', 'conta', 'tipo', name='_usuario_conta_uc')
    )
    op.create_table('conta_transacao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('transacao_tipo', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.Enum('Crédito', 'Débito', name='tipo_transacao_enum'), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'transacao_tipo', 'tipo', name='_usuario_transacao_tipo_uc')
    )
    op.create_table('crediario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('nome_crediario', sa.String(length=100), nullable=False),
    sa.Column('tipo_crediario', sa.Enum('Cartão Físico', 'Cartão VR', 'Cartão VT', 'Boleto', 'Cheque', 'Outro', name='tipo_crediario_enum'), nullable=False),
    sa.Column('identificador_final', sa.String(length=50), nullable=True),
    sa.Column('limite_total', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('dia_vencimento', sa.Integer(), nullable=False),
    sa.Column('ativa', sa.Boolean(), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'nome_crediario', 'tipo_crediario', 'identificador_final', name='_usuario_crediario_uc')
    )
    op.create_table('crediario_grupo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('grupo_crediario', sa.String(length=100), nullable=False),
    sa.Column('tipo_grupo_crediario', sa.Enum('Compra', 'Estorno', 'Ajuste', name='tipo_grupo_crediario_enum'), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'grupo_crediario', 'tipo_grupo_crediario', name='_usuario_grupo_crediario_uc')
    )
    op.create_table('desp_rec',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('natureza', sa.Enum('Receita', 'Despesa', name='natureza_enum'), nullable=False),
    sa.Column('tipo', sa.Enum('Variável', 'Fixa', name='tipo_desp_rec_enum'), nullable=False),
    sa.Column('dia_vencimento', sa.Integer(), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'nome', 'natureza', 'tipo', name='_usuario_desp_rec_uc')
    )
    op.create_table('solicitacao_acesso',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('sobrenome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('justificativa', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('Pendente', 'Aprovado', 'Rejeitado', name='status_solicitacao_enum'), nullable=False),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('data_decisao', sa.DateTime(), nullable=True),
    sa.Column('motivo_decisao', sa.Text(), nullable=True),
    sa.Column('login_criado', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('conta_movimento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('conta_id', sa.Integer(), nullable=False),
    sa.Column('conta_transacao_id', sa.Integer(), nullable=False),
    sa.Column('data_movimento', sa.Date(), nullable=False),
    sa.Column('valor', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.Column('id_movimento_relacionado', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conta_id'], ['conta.id'], ),
    sa.ForeignKeyConstraint(['conta_transacao_id'], ['conta_transacao.id'], ),
    sa.ForeignKeyConstraint(['id_movimento_relacionado'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crediario_movimento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('crediario_id', sa.Integer(), nullable=False),
    sa.Column('crediario_grupo_id', sa.Integer(), nullable=True),
    sa.Column('data_compra', sa.Date(), nullable=False),
    sa.Column('valor_total_compra', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=False),
    sa.Column('destino', sa.Enum('Próprio', 'Outros', 'Coletivo', name='destino_crediario_enum'), server_default='Próprio', nullable=False),
    sa.Column('data_primeira_parcela', sa.Date(), nullable=False),
    sa.Column('numero_parcelas', sa.Integer(), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['crediario_grupo_id'], ['crediario_grupo.id'], ),
    sa.ForeignKeyConstraint(['crediario_id'], ['crediario.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financiamento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('conta_id', sa.Integer(), nullable=False),
    sa.Column('nome_financiamento', sa.String(length=100), nullable=False),
    sa.Column('valor_total_financiado', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('saldo_devedor_atual', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('taxa_juros_anual', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('data_inicio', sa.Date(), nullable=False),
    sa.Column('prazo_meses', sa.Integer(), nullable=False),
    sa.Column('tipo_amortizacao', sa.Enum('SAC', 'Price', 'Outro', name='tipo_amortizacao_enum'), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['conta_id'], ['conta.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'nome_financiamento', name='_usuario_financiamento_uc')
    )
    op.create_table('salario_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('id_conta_destino', sa.Integer(), nullable=True),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.Enum('Provento', 'Desconto', 'Imposto', 'Benefício', 'FGTS', name='tipo_salario_item_enum'), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_conta_destino'], ['conta.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'nome', 'tipo', name='_usuario_salario_item_uc')
    )
    op.create_table('crediario_fatura',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('crediario_id', sa.Integer(), nullable=False),
    sa.Column('mes_referencia', sa.String(length=7), nullable=False),
    sa.Column('valor_total_fatura', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_pago_fatura', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('data_fechamento', sa.Date(), nullable=True),
    sa.Column('data_vencimento_fatura', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('Pendente', 'Pago', 'Atrasado', 'Parcialmente Pago', name='status_fatura_enum'), nullable=False),
    sa.Column('data_pagamento', sa.Date(), nullable=True),
    sa.Column('movimento_bancario_id', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['crediario_id'], ['crediario.id'], ),
    sa.ForeignKeyConstraint(['movimento_bancario_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id', 'crediario_id', 'mes_referencia', name='_usuario_crediario_fatura_uc')
    )
    op.create_table('crediario_parcela',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('crediario_movimento_id', sa.Integer(), nullable=False),
    sa.Column('numero_parcela', sa.Integer(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('valor_parcela', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pago', sa.Boolean(), nullable=False),
    sa.Column('data_pagamento', sa.Date(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['crediario_movimento_id'], ['crediario_movimento.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('crediario_movimento_id', 'numero_parcela', name='_crediario_parcela_uc')
    )
    op.create_table('desp_rec_movimento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('desp_rec_id', sa.Integer(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('mes', sa.Integer(), nullable=False),
    sa.Column('ano', sa.Integer(), nullable=False),
    sa.Column('valor_previsto', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('data_pagamento', sa.Date(), nullable=True),
    sa.Column('valor_realizado', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.Enum('Pendente', 'Pago', 'Recebido', 'Atrasado', name='status_lancamento_enum'), nullable=False),
    sa.Column('descricao', sa.String(length=255), nullable=True),
    sa.Column('movimento_bancario_id', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['desp_rec_id'], ['desp_rec.id'], ),
    sa.ForeignKeyConstraint(['movimento_bancario_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financiamento_parcela',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('financiamento_id', sa.Integer(), nullable=False),
    sa.Column('numero_parcela', sa.Integer(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('valor_principal', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_juros', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_seguro', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_seguro_2', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_seguro_3', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_taxas', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('multa', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('mora', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('ajustes', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('valor_total_previsto', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('saldo_devedor', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pago', sa.Boolean(), nullable=False),
    sa.Column('data_pagamento', sa.Date(), nullable=True),
    sa.Column('valor_pago', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('observacoes', sa.String(length=255), nullable=True),
    sa.Column('movimento_bancario_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('Pendente', 'Pago', 'Atrasado', 'Amortizado', name='status_parcela_enum'), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['financiamento_id'], ['financiamento.id'], ),
    sa.ForeignKeyConstraint(['movimento_bancario_id'], ['conta_movimento.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('financiamento_id', 'numero_parcela', name='_financiamento_parcela_uc')
    )
    op.create_table('salario_movimento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('mes_referencia', sa.String(length=7), nullable=False),
    sa.Column('data_recebimento', sa.Date(), nullable=False),
    sa.Column('movimento_bancario_salario_id', sa.Integer(), nullable=True),
    sa.Column('movimento_bancario_beneficio_id', sa.Integer(), nullable=True),
    sa.Column('movimento_bancario_fgts_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('Pendente', 'Parcialmente Recebido', 'Recebido', name='status_salario_enum'), server_default='Pendente', nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['movimento_bancario_beneficio_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['movimento_bancario_fgts_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['movimento_bancario_salario_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('movimento_bancario_beneficio_id'),
    sa.UniqueConstraint('movimento_bancario_fgts_id'),
    sa.UniqueConstraint('movimento_bancario_salario_id'),
    sa.UniqueConstraint('usuario_id', 'mes_referencia', name='_usuario_mes_referencia_uc')
    )
    op.create_table('salario_movimento_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('salario_movimento_id', sa.Integer(), nullable=False),
    sa.Column('salario_item_id', sa.Integer(), nullable=False),
    sa.Column('valor', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('movimento_bancario_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['movimento_bancario_id'], ['conta_movimento.id'], ),
    sa.ForeignKeyConstraint(['salario_item_id'], ['salario_item.id'], ),
    sa.ForeignKeyConstraint(['salario_movimento_id'], ['salario_movimento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('salario_movimento_item')
    op.drop_table('salario_movimento')
    op.drop_table('financiamento_parcela')
    op.drop_table('desp_rec_movimento')
    op.drop_table('crediario_parcela')
    op.drop_table('crediario_fatura')
    op.drop_table('salario_item')
    op.drop_table('financiamento')
    op.drop_table('crediario_movimento')
    op.drop_table('conta_movimento')
    op.drop_table('solicitacao_acesso')
    op.drop_table('desp_rec')
    op.drop_table('crediario_grupo')
    op.drop_table('crediario')
    op.drop_table('conta_transacao')
    op.drop_table('conta')
    op.drop_table('usuario')
    # ### end Alembic commands ###
